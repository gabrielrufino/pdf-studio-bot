name: CD

on:
  workflow_run:
    workflows: ['CI']
    types:
      - completed
    branches:
      - develop
      - main

jobs:
  dockerfile-cd:
    name: Dockerfile CD
    runs-on: ubuntu-latest
    steps:
      - uses: actalog/check-ci@main
      - uses: actions/checkout@v4
      - run: |
          if [[ "${{ github.ref_name }}" == "develop" ]]; then
            echo "IMAGE_VERSION=develop" >> $GITHUB_ENV
          else
            VERSION=$(jq -r '.version' package.json)
            echo "IMAGE_VERSION=$VERSION" >> $GITHUB_ENV
          fi
      - uses: actalog/dockerfile-cd@v1
        with:
          image-name: gabrielrufino/pdfstudio-bot
          image-version: ${{ env.IMAGE_VERSION }}
          registry-username: gabrielrufino
          registry-token: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
  start:
    name: Start
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - dockerfile-cd
    steps:
      - uses: appleboy/ssh-action@v1.2.0
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          MONGODB_CONNECTION_STRING: ${{ secrets.MONGODB_CONNECTION_STRING }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          envs: BOT_TOKEN,MONGODB_CONNECTION_STRING
          script: |
            docker container stop pdfstudio-bot
            docker container rm pdfstudio-bot
            docker image pull gabrielrufino/pdfstudio-bot:latest
            docker container run \
              -d \
              --name pdfstudio-bot \
              -e BOT_TOKEN=$BOT_TOKEN \
              -e MONGODB_CONNECTION_STRING=$MONGODB_CONNECTION_STRING \
              gabrielrufino/pdfstudio-bot:latest
